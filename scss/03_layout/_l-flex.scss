/* Layout flex */

.l-flex {
    display: flex;

    &--flex-direction {
        &-row {flex-direction: row;}
        &-row-reverse {flex-direction: row-reverse;}
        &-column {flex-direction: column;}
        &-column-reverse {flex-direction: column-reverse;}
    }

    &--align-items {
        &-stretch {align-items: stretch;}
        &-flex-start {align-items: flex-start;}
        &-flex-end {align-items: flex-end;}
        &-center {align-items: center;}
        &-baseline {align-items: baseline;}
    }

    &--justify-content {
        &-flex-start {justify-content: flex-start;}
        &-flex-end {justify-content: flex-end;}
        &-start {justify-content: start;}
        &-end {justify-content: end;}
        &-left {justify-content: left;}
        &-right {justify-content: right;}
        &-center {justify-content: center;}
        &-space-between {justify-content: space-between;}
        &-space-around {justify-content: space-around;}
        &-space-evenly {justify-content: space-evenly;}
    }

    &--align-content {
        &-flex-start {align-content: flex-start;}
        &-flex-end {align-content: flex-end;}
        &-start {align-content: start;}
        &-end {align-content: end;}
        &-left {align-content: left;}
        &-right {align-content: right;}
        &-center {align-content: center;}
        &-space-between {align-content: space-between;}
        &-space-around {align-content: space-around;}
        &-space-evenly {align-content: space-evenly;}
    }

    &--flex-wrap {
        &-nowrap {flex-wrap: nowrap;}
        &-wrap {flex-wrap: wrap;}
        &-wrap-reverse {flex-wrap: wrap-reverse;}
    }
    
    // Gap
    @each $name, $value in $flex-gap-size {
        &--gap-#{$name} {
            gap: $value;
        }
    }

    // Childs
    &__item {
        &--order {
            @for $num_order from 1 through $flex-max-range {
                &-#{$num_order} {
                    order: $num_order;
                }
            }
        }

        &--flex-grow {
            @for $num_grow from 1 through $flex-max-range {
                &-#{$num_grow} {
                    flex-grow: $num_grow;
                }
            }
        }

        &--flex-shrink {
            @for $num_shrink from 1 through $flex-max-range {
                &-#{$num_shrink} {
                    flex-shrink: $num_shrink;
                }
            }
        }

        &--flex-basis {
            @each $name, $value in $flex-basis-size {
                &-#{$name} {
                    flex-basis: $value;
                }
            }
        }
    }
}

// Media
@each $size-name, $size in $media-sizes {
    @media (min-width: $size) {
        @if($media-position == 'right') {
            .l-flex {
                &--flex-direction {
                    &-row#{$media-separator}#{$size-name} {flex-direction: row;}
                    &-row-reverse#{$media-separator}#{$size-name} {flex-direction: row-reverse;}
                    &-column#{$media-separator}#{$size-name} {flex-direction: column;}
                    &-column-reverse#{$media-separator}#{$size-name} {flex-direction: column-reverse;}
                }
            
                &--align-items {
                    &-stretch#{$media-separator}#{$size-name} {align-items: stretch;}
                    &-flex-start#{$media-separator}#{$size-name} {align-items: flex-start;}
                    &-flex-end#{$media-separator}#{$size-name} {align-items: flex-end;}
                    &-center#{$media-separator}#{$size-name} {align-items: center;}
                    &-baseline#{$media-separator}#{$size-name} {align-items: baseline;}
                }
            
                &--justify-content {
                    &-flex-start#{$media-separator}#{$size-name} {justify-content: flex-start;}
                    &-flex-end#{$media-separator}#{$size-name} {justify-content: flex-end;}
                    &-start#{$media-separator}#{$size-name} {justify-content: start;}
                    &-end#{$media-separator}#{$size-name} {justify-content: end;}
                    &-left#{$media-separator}#{$size-name} {justify-content: left;}
                    &-right#{$media-separator}#{$size-name} {justify-content: right;}
                    &-center#{$media-separator}#{$size-name} {justify-content: center;}
                    &-space-between#{$media-separator}#{$size-name} {justify-content: space-between;}
                    &-space-around#{$media-separator}#{$size-name} {justify-content: space-around;}
                    &-space-evenly#{$media-separator}#{$size-name} {justify-content: space-evenly;}
                }
            
                &--align-content {
                    &-flex-start#{$media-separator}#{$size-name} {align-content: flex-start;}
                    &-flex-end#{$media-separator}#{$size-name} {align-content: flex-end;}
                    &-start#{$media-separator}#{$size-name} {align-content: start;}
                    &-end#{$media-separator}#{$size-name} {align-content: end;}
                    &-left#{$media-separator}#{$size-name} {align-content: left;}
                    &-right#{$media-separator}#{$size-name} {align-content: right;}
                    &-center#{$media-separator}#{$size-name} {align-content: center;}
                    &-space-between#{$media-separator}#{$size-name} {align-content: space-between;}
                    &-space-around#{$media-separator}#{$size-name} {align-content: space-around;}
                    &-space-evenly#{$media-separator}#{$size-name} {align-content: space-evenly;}
                }
            
                &--flex-wrap {
                    &-nowrap#{$media-separator}#{$size-name} {flex-wrap: nowrap;}
                    &-wrap#{$media-separator}#{$size-name} {flex-wrap: wrap;}
                    &-wrap-reverse#{$media-separator}#{$size-name} {flex-wrap: wrap-reverse;}
                }
                
                // Gap
                @each $name, $value in $flex-gap-size {
                    &--gap-#{$name}#{$media-separator}#{$size-name} {
                        gap: $value;
                    }
                }
            
                // Childs
                &__item {
                    &--order {
                        @for $num_order from 1 through $flex-max-range {
                            &-#{$num_order}#{$media-separator}#{$size-name} {
                                order: $num_order;
                            }
                        }
                    }
            
                    &--flex-grow {
                        @for $num_grow from 1 through $flex-max-range {
                            &-#{$num_grow}#{$media-separator}#{$size-name} {
                                flex-grow: $num_grow;
                            }
                        }
                    }
            
                    &--flex-shrink {
                        @for $num_shrink from 1 through $flex-max-range {
                            &-#{$num_shrink}#{$media-separator}#{$size-name} {
                                flex-shrink: $num_shrink;
                            }
                        }
                    }
            
                    &--flex-basis {
                        @each $name, $value in $flex-basis-size {
                            &-#{$name}#{$media-separator}#{$size-name} {
                                flex-basis: $value;
                            }
                        }
                    }
                }
            }
        } @else {
            .#{$size-name}#{$media-separator}l-flex {
                display: flex;
            
                &--flex-direction {
                    &-row {flex-direction: row;}
                    &-row-reverse {flex-direction: row-reverse;}
                    &-column {flex-direction: column;}
                    &-column-reverse {flex-direction: column-reverse;}
                }
            
                &--align-items {
                    &-stretch {align-items: stretch;}
                    &-flex-start {align-items: flex-start;}
                    &-flex-end {align-items: flex-end;}
                    &-center {align-items: center;}
                    &-baseline {align-items: baseline;}
                }
            
                &--justify-content {
                    &-flex-start {justify-content: flex-start;}
                    &-flex-end {justify-content: flex-end;}
                    &-start {justify-content: start;}
                    &-end {justify-content: end;}
                    &-left {justify-content: left;}
                    &-right {justify-content: right;}
                    &-center {justify-content: center;}
                    &-space-between {justify-content: space-between;}
                    &-space-around {justify-content: space-around;}
                    &-space-evenly {justify-content: space-evenly;}
                }
            
                &--align-content {
                    &-flex-start {align-content: flex-start;}
                    &-flex-end {align-content: flex-end;}
                    &-start {align-content: start;}
                    &-end {align-content: end;}
                    &-left {align-content: left;}
                    &-right {align-content: right;}
                    &-center {align-content: center;}
                    &-space-between {align-content: space-between;}
                    &-space-around {align-content: space-around;}
                    &-space-evenly {align-content: space-evenly;}
                }
            
                &--flex-wrap {
                    &-nowrap {flex-wrap: nowrap;}
                    &-wrap {flex-wrap: wrap;}
                    &-wrap-reverse {flex-wrap: wrap-reverse;}
                }
                
                // Gap
                @each $name, $value in $flex-gap-size {
                    &--gap-#{$name} {
                        gap: $value;
                    }
                }
            
                // Childs
                &__item {
                    &--order {
                        @for $num_order from 1 through $flex-max-range {
                            &-#{$num_order} {
                                order: $num_order;
                            }
                        }
                    }
            
                    &--flex-grow {
                        @for $num_grow from 1 through $flex-max-range {
                            &-#{$num_grow} {
                                flex-grow: $num_grow;
                            }
                        }
                    }
            
                    &--flex-shrink {
                        @for $num_shrink from 1 through $flex-max-range {
                            &-#{$num_shrink} {
                                flex-shrink: $num_shrink;
                            }
                        }
                    }
            
                    &--flex-basis {
                        @each $name, $value in $flex-basis-size {
                            &-#{$name} {
                                flex-basis: $value;
                            }
                        }
                    }
                }
            }
        }
    }
}